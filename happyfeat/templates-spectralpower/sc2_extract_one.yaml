## This Yaml file is used to extract psd feature from a csf file of raw data

graphs:



  - id: analysing
    nodes:
    # Subscribe to signal
    # ----------
    - id: edf_reader
      module: useful.edf_oneshot
      class: Replay
      params:
        filename: C:\happyfeat\workspaces\test\signals\Test-[2022.10.17-16.24.55].edf
    - id: select_A
      module: timeflux.nodes.query
      class: LocQuery
      params:
        key: [ CP3,CP1,C1,C3 ]
    - id: select_B
      module: timeflux.nodes.query
      class: LocQuery
      params:
        key: [CP3,CP1,C1,C3 ]


    # Stimulations + Temporal features 
    # --------------------------------

    ## stimulation class A
      
    - id: epoching_A
      module: timeflux.nodes.epoch
      class: Epoch
      # Set your epoching parameters here
      params:
          before: 0
          after: 4  
          event_trigger: 'OVTK_GDF_Left'

    - id: trim_A
      module: timeflux.nodes.epoch
      class: Trim
      params:
        # assumes 500 Hz sample rate and trim to 3 seconds
        samples: 2000

    - id: dynamic_output_A
      module: useful.dynamic_output
      class: DynamicOutputNode
      params:
        length: 1500

    - id: display_epoching_A
      module: timeflux.nodes.debug
      class: Display
      params:
        meta: True

    - id: welch_psd_A
      module: timeflux_dsp.nodes.spectral
      class: Welch
      params:
        rate: 500 
        nfft: 512


    - id: Transform_A
      module: useful.debugging_printing   #timeflux.nodes.xarray
      class: ToDataFrame
      params:
        index_dim : 'time'

    - id: Bands_A
      module: timeflux_dsp.nodes.spectral
      class: Bands
      params:
        bands:
          range_A:
          - 8
          - 30


    - id: PublisherWelch_A
      module: timeflux.nodes.zmq
      class: Pub
      params:
        topic: PSD_A

    # stimulation class B

      
    - id: epoching_B
      module: timeflux.nodes.epoch
      class: Epoch
      params:
          before: 0  
          after: 4 
          event_trigger:  'OVTK_GDF_Right'
          

    - id: trim_B
      module: timeflux.nodes.epoch
      class: Trim
      params:
        # assumes 500 Hz sample rate and trim to 3 seconds
        samples: 2000
    - id: dynamic_output_B
      module: useful.dynamic_output
      class: DynamicOutputNode
      params:
        length: 1500

    - id: display_epoching_B
      module: timeflux.nodes.debug
      class: Display

    - id: welch_psd_B
      module: timeflux_dsp.nodes.spectral
      class: Welch
      params:
        rate: 500
        nfft: 512

    - id: Transform_B
      module: useful.debugging_printing   #timeflux.nodes.xarray
      class: ToDataFrame
      params:
        index_dim : 'time'
    - id: Bands_B
      module: timeflux_dsp.nodes.spectral
      class: Bands
      params:
        bands:
          range_B:
          - 8
          - 30
        

    - id: PublisherWelch_B
      module: timeflux.nodes.zmq
      class: Pub
      params:
        topic: PSD_B

    - id: Recorder
      module: useful.csvfile_oneshot 
      class: SaveToCSV
      params:
        filename: "csv_file" 
        path : "./"
        rate: 500


    edges:

    - source: edf_reader:raw
      target: select_A
    - source: edf_reader:raw
      target: select_B


    - source: select_A
      target: epoching_A      
    - source: edf_reader:events
      target: epoching_A:events
    - source: epoching_A:*
      target: trim_A
    - source: trim_A:*
      target: dynamic_output_A
    - source: dynamic_output_A
      target: welch_psd_A
    - source: welch_psd_A
      target: Transform_A
    - source: welch_psd_A
      target: Bands_A
    - source: Transform_A
      target: PublisherWelch_A

    - source: select_B
      target: epoching_B
    - source: edf_reader:events
      target: epoching_B:events
    - source: epoching_B:*
      target: trim_B
    - source: trim_B:*
      target: dynamic_output_B
    - source: dynamic_output_B
      target: welch_psd_B
    - source: welch_psd_B
      target: Transform_B
    - source: welch_psd_B
      target: Bands_B
    - source: Transform_B
      target: PublisherWelch_B

    - source: epoching_B
      target: display_epoching_A
    # - source: Transform_B
    #   target: display_epoching_B

    - source: Transform_B
      target: Recorder:REST
    - source: Transform_A
      target: Recorder:MI
    # rate: 1






